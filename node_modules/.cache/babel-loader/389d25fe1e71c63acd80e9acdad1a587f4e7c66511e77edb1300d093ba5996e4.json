{"ast":null,"code":"var _jsxFileName = \"/home/nikhil/chess-app/src/component/board.js\";\nimport React from 'react';\nimport \"./board.css\";\nimport Box from \"./box.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\"];\nconst rows = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\"];\nconst Piece = {\n  image: null,\n  x: 0,\n  y: 0\n};\nconst pieces = [];\npieces.push({\n  image: '../images/Chess_plt60.png',\n  x: 1,\n  y: 1\n});\nexport default function board() {\n  let image = undefined;\n  for (var i = 0; i < rows.length; i++) {\n    for (var j = 0; j < columns.length; j++) {\n      pieces.forEach(p => {\n        if (p.x === i && p.y === j) {\n          image = p.image;\n        }\n      });\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"chessbd\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chessbdIn\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table\",\n        children: rows.map(row => {\n          {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: columns.map(column => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"column\",\n                id: row + column,\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  row: row,\n                  column: column,\n                  image: image\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 33,\n                  columnNumber: 73\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 33\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 36\n            }, this);\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"names":["React","Box","jsxDEV","_jsxDEV","columns","rows","Piece","image","x","y","pieces","push","board","undefined","i","length","j","forEach","p","id","children","className","map","row","column","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/nikhil/chess-app/src/component/board.js"],"sourcesContent":["import React from 'react'\nimport \"./board.css\"\nimport Box from \"./box.js\";\nconst columns = [\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\"];\nconst rows = [\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\"];\nconst Piece = {\n    image:null,\n    x:0,\n    y:0\n  }\n  const pieces=[];\n  pieces.push({image:'../images/Chess_plt60.png',x:1,y:1});\nexport default function board() {\n    let image=undefined;\n    for(var i=0;i<rows.length;i++){\n        for(var j=0;j<columns.length;j++){\n            pieces.forEach((p)=> {\n                 if(p.x === i && p.y ===j){\n                    image = p.image;\n                 }   \n            });\n        }\n    }\n  return (\n    <div id='chessbd'>\n        <div className='chessbdIn'>\n            <div className='table'>\n                {\n                    rows.map((row)=>{\n                        {\n                            return(<div className='row'>\n                            {columns.map((column)=>(\n                                <div className='column' id={row+column}><Box row={row} column={column} image={image}/>\n                                </div>\n                            ))}\n                            </div>)\n                        }\n                    })\n                }\n            </div>\n        </div>\n    </div>\n  )\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC3B,MAAMC,OAAO,GAAG,CAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,CAAC;AACjD,MAAMC,IAAI,GAAG,CAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,CAAC;AAC9C,MAAMC,KAAK,GAAG;EACVC,KAAK,EAAC,IAAI;EACVC,CAAC,EAAC,CAAC;EACHC,CAAC,EAAC;AACJ,CAAC;AACD,MAAMC,MAAM,GAAC,EAAE;AACfA,MAAM,CAACC,IAAI,CAAC;EAACJ,KAAK,EAAC,2BAA2B;EAACC,CAAC,EAAC,CAAC;EAACC,CAAC,EAAC;AAAC,CAAC,CAAC;AAC1D,eAAe,SAASG,KAAKA,CAAA,EAAG;EAC5B,IAAIL,KAAK,GAACM,SAAS;EACnB,KAAI,IAAIC,CAAC,GAAC,CAAC,EAACA,CAAC,GAACT,IAAI,CAACU,MAAM,EAACD,CAAC,EAAE,EAAC;IAC1B,KAAI,IAAIE,CAAC,GAAC,CAAC,EAACA,CAAC,GAACZ,OAAO,CAACW,MAAM,EAACC,CAAC,EAAE,EAAC;MAC7BN,MAAM,CAACO,OAAO,CAAEC,CAAC,IAAI;QAChB,IAAGA,CAAC,CAACV,CAAC,KAAKM,CAAC,IAAII,CAAC,CAACT,CAAC,KAAIO,CAAC,EAAC;UACtBT,KAAK,GAAGW,CAAC,CAACX,KAAK;QAClB;MACL,CAAC,CAAC;IACN;EACJ;EACF,oBACEJ,OAAA;IAAKgB,EAAE,EAAC,SAAS;IAAAC,QAAA,eACbjB,OAAA;MAAKkB,SAAS,EAAC,WAAW;MAAAD,QAAA,eACtBjB,OAAA;QAAKkB,SAAS,EAAC,OAAO;QAAAD,QAAA,EAEdf,IAAI,CAACiB,GAAG,CAAEC,GAAG,IAAG;UACZ;YACI,oBAAOpB,OAAA;cAAKkB,SAAS,EAAC,KAAK;cAAAD,QAAA,EAC1BhB,OAAO,CAACkB,GAAG,CAAEE,MAAM,iBAChBrB,OAAA;gBAAKkB,SAAS,EAAC,QAAQ;gBAACF,EAAE,EAAEI,GAAG,GAACC,MAAO;gBAAAJ,QAAA,eAACjB,OAAA,CAACF,GAAG;kBAACsB,GAAG,EAAEA,GAAI;kBAACC,MAAM,EAAEA,MAAO;kBAACjB,KAAK,EAAEA;gBAAM;kBAAAkB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA;cAAE;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,QAEzF;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QACI;UACV;QACJ,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAEJ;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACJ;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACJ;AAEV"},"metadata":{},"sourceType":"module","externalDependencies":[]}