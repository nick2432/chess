{"ast":null,"code":"import _classCallCheck from \"/home/nikhil/Desktop/new chess/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/nikhil/Desktop/new chess/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/nikhil/Desktop/new chess/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/nikhil/Desktop/new chess/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Transport } from \"../transport.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { defaultBinaryType, nextTick, usingBrowserWebSocket, WebSocket } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nvar isReactNative = typeof navigator !== \"undefined\" && typeof navigator.product === \"string\" && navigator.product.toLowerCase() === \"reactnative\";\nexport var WS = /*#__PURE__*/function (_Transport) {\n  _inherits(WS, _Transport);\n  var _super = _createSuper(WS);\n  /**\n   * WebSocket transport constructor.\n   *\n   * @param {Object} opts - connection options\n   * @protected\n   */\n  function WS(opts) {\n    var _this;\n    _classCallCheck(this, WS);\n    _this = _super.call(this, opts);\n    _this.supportsBinary = !opts.forceBase64;\n    return _this;\n  }\n  _createClass(WS, [{\n    key: \"name\",\n    get: function get() {\n      return \"websocket\";\n    }\n  }, {\n    key: \"doOpen\",\n    value: function doOpen() {\n      if (!this.check()) {\n        // let probe timeout\n        return;\n      }\n      var uri = this.uri();\n      var protocols = this.opts.protocols;\n      // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n      var opts = isReactNative ? {} : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n      if (this.opts.extraHeaders) {\n        opts.headers = this.opts.extraHeaders;\n      }\n      try {\n        this.ws = usingBrowserWebSocket && !isReactNative ? protocols ? new WebSocket(uri, protocols) : new WebSocket(uri) : new WebSocket(uri, protocols, opts);\n      } catch (err) {\n        return this.emitReserved(\"error\", err);\n      }\n      this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n      this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @private\n     */\n  }, {\n    key: \"addEventListeners\",\n    value: function addEventListeners() {\n      var _this2 = this;\n      this.ws.onopen = function () {\n        if (_this2.opts.autoUnref) {\n          _this2.ws._socket.unref();\n        }\n        _this2.onOpen();\n      };\n      this.ws.onclose = function (closeEvent) {\n        return _this2.onClose({\n          description: \"websocket connection closed\",\n          context: closeEvent\n        });\n      };\n      this.ws.onmessage = function (ev) {\n        return _this2.onData(ev.data);\n      };\n      this.ws.onerror = function (e) {\n        return _this2.onError(\"websocket error\", e);\n      };\n    }\n  }, {\n    key: \"write\",\n    value: function write(packets) {\n      var _this3 = this;\n      this.writable = false;\n      // encodePacket efficient as it uses WS framing\n      // no need for encodePayload\n      var _loop = function _loop() {\n        var packet = packets[i];\n        var lastPacket = i === packets.length - 1;\n        encodePacket(packet, _this3.supportsBinary, function (data) {\n          // always create a new object (GH-437)\n          var opts = {};\n          if (!usingBrowserWebSocket) {\n            if (packet.options) {\n              opts.compress = packet.options.compress;\n            }\n            if (_this3.opts.perMessageDeflate) {\n              var len =\n              // @ts-ignore\n              \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n              if (len < _this3.opts.perMessageDeflate.threshold) {\n                opts.compress = false;\n              }\n            }\n          }\n          // Sometimes the websocket has already been closed but the browser didn't\n          // have a chance of informing us about it yet, in that case send will\n          // throw an error\n          try {\n            if (usingBrowserWebSocket) {\n              // TypeError is thrown when passing the second argument on Safari\n              _this3.ws.send(data);\n            } else {\n              _this3.ws.send(data, opts);\n            }\n          } catch (e) {}\n          if (lastPacket) {\n            // fake drain\n            // defer to next tick to allow Socket to clear writeBuffer\n            nextTick(function () {\n              _this3.writable = true;\n              _this3.emitReserved(\"drain\");\n            }, _this3.setTimeoutFn);\n          }\n        });\n      };\n      for (var i = 0; i < packets.length; i++) {\n        _loop();\n      }\n    }\n  }, {\n    key: \"doClose\",\n    value: function doClose() {\n      if (typeof this.ws !== \"undefined\") {\n        this.ws.close();\n        this.ws = null;\n      }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n  }, {\n    key: \"uri\",\n    value: function uri() {\n      var query = this.query || {};\n      var schema = this.opts.secure ? \"wss\" : \"ws\";\n      var port = \"\";\n      // avoid port if default for schema\n      if (this.opts.port && (\"wss\" === schema && Number(this.opts.port) !== 443 || \"ws\" === schema && Number(this.opts.port) !== 80)) {\n        port = \":\" + this.opts.port;\n      }\n      // append timestamp to URI\n      if (this.opts.timestampRequests) {\n        query[this.opts.timestampParam] = yeast();\n      }\n      // communicate binary support capabilities\n      if (!this.supportsBinary) {\n        query.b64 = 1;\n      }\n      var encodedQuery = encode(query);\n      var ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n      return schema + \"://\" + (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) + port + this.opts.path + (encodedQuery.length ? \"?\" + encodedQuery : \"\");\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @private\n     */\n  }, {\n    key: \"check\",\n    value: function check() {\n      return !!WebSocket;\n    }\n  }]);\n  return WS;\n}(Transport);","map":{"version":3,"names":["Transport","encode","yeast","pick","defaultBinaryType","nextTick","usingBrowserWebSocket","WebSocket","encodePacket","isReactNative","navigator","product","toLowerCase","WS","_Transport","_inherits","_super","_createSuper","opts","_this","_classCallCheck","call","supportsBinary","forceBase64","_createClass","key","get","value","doOpen","check","uri","protocols","extraHeaders","headers","ws","err","emitReserved","binaryType","socket","addEventListeners","_this2","onopen","autoUnref","_socket","unref","onOpen","onclose","closeEvent","onClose","description","context","onmessage","ev","onData","data","onerror","e","onError","write","packets","_this3","writable","_loop","packet","i","lastPacket","length","options","compress","perMessageDeflate","len","Buffer","byteLength","threshold","send","setTimeoutFn","doClose","close","query","schema","secure","port","Number","timestampRequests","timestampParam","b64","encodedQuery","ipv6","hostname","indexOf","path"],"sources":["/home/nikhil/Desktop/new chess/node_modules/engine.io-client/build/esm/transports/websocket.js"],"sourcesContent":["import { Transport } from \"../transport.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { defaultBinaryType, nextTick, usingBrowserWebSocket, WebSocket, } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @param {Object} opts - connection options\n     * @protected\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    get name() {\n        return \"websocket\";\n    }\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = (closeEvent) => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent,\n        });\n        this.ws.onmessage = (ev) => this.onData(ev.data);\n        this.ws.onerror = (e) => this.onError(\"websocket error\", e);\n    }\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, (data) => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        let port = \"\";\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"wss\" === schema && Number(this.opts.port) !== 443) ||\n                (\"ws\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @private\n     */\n    check() {\n        return !!WebSocket;\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}