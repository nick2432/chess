{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.browserPrefixToKey = browserPrefixToKey;\nexports.browserPrefixToStyle = browserPrefixToStyle;\nexports.default = void 0;\nexports.getPrefix = getPrefix;\nvar prefixes = ['Moz', 'Webkit', 'O', 'ms'];\nfunction getPrefix() /*: string*/\n{\n  var _window$document, _window$document$docu;\n  var prop\n  /*: string*/ = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'transform';\n  // Ensure we're running in an environment where there is actually a global\n  // `window` obj\n  if (typeof window === 'undefined') return ''; // If we're in a pseudo-browser server-side environment, this access\n  // path may not exist, so bail out if it doesn't.\n\n  var style = (_window$document = window.document) === null || _window$document === void 0 ? void 0 : (_window$document$docu = _window$document.documentElement) === null || _window$document$docu === void 0 ? void 0 : _window$document$docu.style;\n  if (!style) return '';\n  if (prop in style) return '';\n  for (var i = 0; i < prefixes.length; i++) {\n    if (browserPrefixToKey(prop, prefixes[i]) in style) return prefixes[i];\n  }\n  return '';\n}\nfunction browserPrefixToKey(prop\n/*: string*/, prefix\n/*: string*/) /*: string*/\n{\n  return prefix ? \"\".concat(prefix).concat(kebabToTitleCase(prop)) : prop;\n}\nfunction browserPrefixToStyle(prop\n/*: string*/, prefix\n/*: string*/) /*: string*/\n{\n  return prefix ? \"-\".concat(prefix.toLowerCase(), \"-\").concat(prop) : prop;\n}\nfunction kebabToTitleCase(str\n/*: string*/) /*: string*/\n{\n  var out = '';\n  var shouldCapitalize = true;\n  for (var i = 0; i < str.length; i++) {\n    if (shouldCapitalize) {\n      out += str[i].toUpperCase();\n      shouldCapitalize = false;\n    } else if (str[i] === '-') {\n      shouldCapitalize = true;\n    } else {\n      out += str[i];\n    }\n  }\n  return out;\n} // Default export is the prefix itself, like 'Moz', 'Webkit', etc\n// Note that you may have to re-test for certain things; for instance, Chrome 50\n// can handle unprefixed `transform`, but not unprefixed `user-select`\n\nvar _default = getPrefix()\n/*: string*/;\n\nexports.default = _default;","map":{"version":3,"names":["Object","defineProperty","exports","value","browserPrefixToKey","browserPrefixToStyle","default","getPrefix","prefixes","_window$document","_window$document$docu","prop","arguments","length","undefined","window","style","document","documentElement","i","prefix","concat","kebabToTitleCase","toLowerCase","str","out","shouldCapitalize","toUpperCase","_default"],"sources":["/home/nikhil/chess-app/node_modules/react-draggable/build/cjs/utils/getPrefix.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.browserPrefixToKey = browserPrefixToKey;\nexports.browserPrefixToStyle = browserPrefixToStyle;\nexports.default = void 0;\nexports.getPrefix = getPrefix;\nvar prefixes = ['Moz', 'Webkit', 'O', 'ms'];\n\nfunction getPrefix()\n/*: string*/\n{\n  var _window$document, _window$document$docu;\n\n  var prop\n  /*: string*/\n  = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'transform';\n  // Ensure we're running in an environment where there is actually a global\n  // `window` obj\n  if (typeof window === 'undefined') return ''; // If we're in a pseudo-browser server-side environment, this access\n  // path may not exist, so bail out if it doesn't.\n\n  var style = (_window$document = window.document) === null || _window$document === void 0 ? void 0 : (_window$document$docu = _window$document.documentElement) === null || _window$document$docu === void 0 ? void 0 : _window$document$docu.style;\n  if (!style) return '';\n  if (prop in style) return '';\n\n  for (var i = 0; i < prefixes.length; i++) {\n    if (browserPrefixToKey(prop, prefixes[i]) in style) return prefixes[i];\n  }\n\n  return '';\n}\n\nfunction browserPrefixToKey(prop\n/*: string*/\n, prefix\n/*: string*/\n)\n/*: string*/\n{\n  return prefix ? \"\".concat(prefix).concat(kebabToTitleCase(prop)) : prop;\n}\n\nfunction browserPrefixToStyle(prop\n/*: string*/\n, prefix\n/*: string*/\n)\n/*: string*/\n{\n  return prefix ? \"-\".concat(prefix.toLowerCase(), \"-\").concat(prop) : prop;\n}\n\nfunction kebabToTitleCase(str\n/*: string*/\n)\n/*: string*/\n{\n  var out = '';\n  var shouldCapitalize = true;\n\n  for (var i = 0; i < str.length; i++) {\n    if (shouldCapitalize) {\n      out += str[i].toUpperCase();\n      shouldCapitalize = false;\n    } else if (str[i] === '-') {\n      shouldCapitalize = true;\n    } else {\n      out += str[i];\n    }\n  }\n\n  return out;\n} // Default export is the prefix itself, like 'Moz', 'Webkit', etc\n// Note that you may have to re-test for certain things; for instance, Chrome 50\n// can handle unprefixed `transform`, but not unprefixed `user-select`\n\n\nvar _default = (getPrefix()\n/*: string*/\n);\n\nexports.default = _default;"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,kBAAkB,GAAGA,kBAAkB;AAC/CF,OAAO,CAACG,oBAAoB,GAAGA,oBAAoB;AACnDH,OAAO,CAACI,OAAO,GAAG,KAAK,CAAC;AACxBJ,OAAO,CAACK,SAAS,GAAGA,SAAS;AAC7B,IAAIC,QAAQ,GAAG,CAAC,KAAK,EAAE,QAAQ,EAAE,GAAG,EAAE,IAAI,CAAC;AAE3C,SAASD,SAASA,CAAA,EAClB;AACA;EACE,IAAIE,gBAAgB,EAAEC,qBAAqB;EAE3C,IAAIC;EACJ,eACEC,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAG,WAAW;EACjF;EACA;EACA,IAAI,OAAOG,MAAM,KAAK,WAAW,EAAE,OAAO,EAAE,CAAC,CAAC;EAC9C;;EAEA,IAAIC,KAAK,GAAG,CAACP,gBAAgB,GAAGM,MAAM,CAACE,QAAQ,MAAM,IAAI,IAAIR,gBAAgB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,CAACC,qBAAqB,GAAGD,gBAAgB,CAACS,eAAe,MAAM,IAAI,IAAIR,qBAAqB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,qBAAqB,CAACM,KAAK;EAClP,IAAI,CAACA,KAAK,EAAE,OAAO,EAAE;EACrB,IAAIL,IAAI,IAAIK,KAAK,EAAE,OAAO,EAAE;EAE5B,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGX,QAAQ,CAACK,MAAM,EAAEM,CAAC,EAAE,EAAE;IACxC,IAAIf,kBAAkB,CAACO,IAAI,EAAEH,QAAQ,CAACW,CAAC,CAAC,CAAC,IAAIH,KAAK,EAAE,OAAOR,QAAQ,CAACW,CAAC,CAAC;EACxE;EAEA,OAAO,EAAE;AACX;AAEA,SAASf,kBAAkBA,CAACO;AAC5B,cACES;AACF,cAEA;AACA;EACE,OAAOA,MAAM,GAAG,EAAE,CAACC,MAAM,CAACD,MAAM,CAAC,CAACC,MAAM,CAACC,gBAAgB,CAACX,IAAI,CAAC,CAAC,GAAGA,IAAI;AACzE;AAEA,SAASN,oBAAoBA,CAACM;AAC9B,cACES;AACF,cAEA;AACA;EACE,OAAOA,MAAM,GAAG,GAAG,CAACC,MAAM,CAACD,MAAM,CAACG,WAAW,EAAE,EAAE,GAAG,CAAC,CAACF,MAAM,CAACV,IAAI,CAAC,GAAGA,IAAI;AAC3E;AAEA,SAASW,gBAAgBA,CAACE;AAC1B,cAEA;AACA;EACE,IAAIC,GAAG,GAAG,EAAE;EACZ,IAAIC,gBAAgB,GAAG,IAAI;EAE3B,KAAK,IAAIP,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGK,GAAG,CAACX,MAAM,EAAEM,CAAC,EAAE,EAAE;IACnC,IAAIO,gBAAgB,EAAE;MACpBD,GAAG,IAAID,GAAG,CAACL,CAAC,CAAC,CAACQ,WAAW,EAAE;MAC3BD,gBAAgB,GAAG,KAAK;IAC1B,CAAC,MAAM,IAAIF,GAAG,CAACL,CAAC,CAAC,KAAK,GAAG,EAAE;MACzBO,gBAAgB,GAAG,IAAI;IACzB,CAAC,MAAM;MACLD,GAAG,IAAID,GAAG,CAACL,CAAC,CAAC;IACf;EACF;EAEA,OAAOM,GAAG;AACZ,CAAC,CAAC;AACF;AACA;;AAGA,IAAIG,QAAQ,GAAIrB,SAAS;AACzB,YACC;;AAEDL,OAAO,CAACI,OAAO,GAAGsB,QAAQ"},"metadata":{},"sourceType":"script","externalDependencies":[]}